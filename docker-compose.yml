version: "3.3"

services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/.docker/config.json:/config.json
    command: --label-enable --cleanup --schedule "0 0 4 * * *"
    restart: unless-stopped

  plex:
    image: linuxserver/plex
    container_name: plex
    networks:
      - web
    ports:
      - 32400:32400/tcp
      - 32400:32400/udp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)
      - traefik.http.routers.plex.entrypoints=https
      - traefik.http.services.plex.loadbalancer.server.port=32400
      - traefik.http.routers.plex.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - ADVERTISE_IP="https://plex.${DOMAIN}:443"
    volumes:
      - ${CONTAINERS}/plex/config:/config
      - ${DATA}:/data
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      - web
    ports:
      - 8989:8989
    depends_on:
      - sabnzbd
      - jackett
      - nzbhydra2
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/sonarr/config:/config
      - ${CONTAINERS}/sonarr/empty:/downloads # Not used
      - ${DATA}:/data
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      - web
    ports:
      - 7878:7878
    depends_on:
      - sabnzbd
      - jackett
      - nzbhydra2
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.middlewares=internalwhitelist@docker    
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/radarr/config:/config
      - ${CONTAINERS}/radarr/empty:/downloads # Not used
      - ${DATA}:/data
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    networks:
      - web
    ports:
      - 6767:6767
    depends_on:
      - sonarr
      - radarr
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.routers.bazarr.entrypoints=https
      - traefik.http.routers.bazarr.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/bazarr/config:/config
      - ${DATA}:/data
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    networks:
      - web
    ports:
      - 9117:9117
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
      - traefik.http.routers.jackett.entrypoints=https
      - traefik.http.routers.jackett.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - AUTO_UPDATE=true
    volumes:
      - ${CONTAINERS}/jackett/config:/config
    restart: unless-stopped

  nzbhydra2:
    image: linuxserver/nzbhydra2
    container_name: nzbhydra2
    networks:
      - web
    ports:
      - 5076:5076
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${DOMAIN}`)
      - traefik.http.routers.nzbhydra.entrypoints=https
      - traefik.http.routers.nzbhydra2.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/nzbhydra2/config:/config
      - ${DOWNLOADS}/nzbhydra2:/downloads
    restart: unless-stopped

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    networks:
      - web
    ports:
      - 9050:8080
      - 9051:9090
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)
      - traefik.http.routers.sabnzbd.entrypoints=https
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      - traefik.http.routers.sabnzbd.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/sabnzbd/config:/config
      - ${DOWNLOADS}/usenet:/downloads
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    networks:
      - web
    ports:
      - 9000:9000
      - 8000:8000
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
      - traefik.http.routers.portainer.entrypoints=https
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      - traefik.http.routers.portainer.middlewares=internalwhitelist@docker
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONTAINERS}/portainer:/data

  portainer_agent:
    image: portainer/agent
    container_name: portainer-agent
    networks:
      - web
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false

  organizr:
    image: organizr/organizr
    container_name: organizr
    networks:
      - web
    ports:
      - 9983:80
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.orzanizr.rule=Host(`organizr.${DOMAIN}`) || Host(`mediabox.${DOMAIN}`)
      - traefik.http.routers.orzanizr.entrypoints=https
      - traefik.http.services.organizr.loadbalancer.server.port=80
      - traefik.http.routers.organizr.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/organizr:/config
    restart: unless-stopped

  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    networks:
      - web
    ports:
      - 8200:8200
    labels:
      - com.centurylinklabs.duplicati.enable=true
      - traefik.enable=true
      - traefik.http.routers.duplicati.rule=Host(`duplicati.${DOMAIN}`)
      - traefik.http.routers.duplicati.entrypoints=https
      - traefik.http.routers.duplicati.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/duplicati/config:/config
      - ${CONTAINERS}/duplicati/backups:/backups
      - /:/source
    restart: unless-stopped
