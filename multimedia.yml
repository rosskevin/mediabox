version: "3.3"

services:
  #
  # Run plex in host mode, due to superior discoverability on the local network and to avoid
  #   complexities in bridge network setup.  No matter what I tried with a bridged network,
  #   I was unable to get traffic seen as local, causing downgrading of streams/limiting of quality.
  #
  # Using `host` networking limited my access via plex.example.com, but this is already handled
  #   by plex by enabling `Remote access` and just using https://app.plex.tv instead.
  #
  # TL;DR 
  #   - gave up on plex.example.com and instead used host networking and app.plex.tv
  #   - access local server via http://<host_ip>:32400/web
  #   - enable `Remote access`
  #   - make sure to port forward 32400 on your router to <host_ip>
  #
  # @see https://github.com/plexinc/pms-docker/blob/master/README.md#usage
  #   
  plex:
    image: plexinc/pms-docker
    container_name: plex
    network_mode: host
    environment:
      - TZ=${TIMEZONE}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}      
    volumes:
      - ${CONTAINERS}/plex/config:/config
      - ${PLEX_TRANSCODE}:/transcode
      - ${DATA}:/data
    # Enables Hardware Transcoding if available
    # https://github.com/plexinc/pms-docker#intel-quick-sync-hardware-transcoding-support
    devices:
      - /dev/dri:/dev/dri      
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - web
    ports:
      - 8989:8989
    depends_on:
      - sabnzbd
      - prowlarr
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME}
    volumes:
      - ${CONTAINERS}/sonarr/config:/config
      - ${DATA}:/data
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - web
    ports:
      - 7878:7878
    depends_on:
      - sabnzbd
      - prowlarr
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.middlewares=internalwhitelist@docker    
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME}
    volumes:
      - ${CONTAINERS}/radarr/config:/config
      - ${DATA}:/data
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    networks:
      - web    
    ports:
      - 9696:9696
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=https
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=internalwhitelist@docker    
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME}
    volumes:
      - ${CONTAINERS}/prowlarr/config:/config
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    networks:
      - web
    ports:
      - 8080:8080 # https port set as the loadbalancer.server.port below - may be protected by authentication
      # - 9080:8080 # http port, not protected, to be used for local api
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.entrypoints=https
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      - traefik.http.routers.sabnzbd.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${TP_THEME}
    volumes:
      - ${CONTAINERS}/sabnzbd/config:/config
      - ${DATA}:/data
    restart: unless-stopped

  # Organize a single page with tabs to manage all services.
  organizr:
    image: organizr/organizr
    container_name: organizr
    networks:
      - web
    ports:
      - 9983:80
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.orzanizr.entrypoints=https
      - traefik.http.services.organizr.loadbalancer.server.port=80
      - traefik.http.routers.organizr.middlewares=internalwhitelist@docker
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONTAINERS}/organizr:/config
    restart: unless-stopped

